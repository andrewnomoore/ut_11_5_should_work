// @strict-types


#Область ОписаниеПеременных

&НаКлиенте
Перем ОбновитьИнтерфейс;	//Истина - Произвести отложенное обновление интерфейса

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбновитьЗначениеРеквизитов("Константа_ИспользоватьИнтеграциюСЭТПБидзаар");
	
	УправлениеВидимостьюДоступностью(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИспользоватьИнтеграциюСЭТПБидзаарПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент, Истина);
	
	УправлениеВидимостьюДоступностью(ЭтаФорма);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура НастройкиПодключенийБидзаар(Команда)
	ОткрытьФорму("Обработка.УправлениеВыгрузкамиВБидзаар.Форма.СписокПодключенийКСервису",
		,ЭтотОбъект, 
		Истина);
КонецПроцедуры

&НаКлиенте
Процедура НастройкаВыгрузки(Команда)
	ОткрытьФорму("Обработка.УправлениеВыгрузкамиВБидзаар.Форма.ВыгрузкаДанных");
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Клиент

&НаКлиенте
Процедура Подключаемый_ПриИзмененииРеквизита(Элемент, ОбновлятьИнтерфейс = Ложь)
	
	ИмяРеквизита = ПриИзмененииРеквизитаСервер(Элемент.Имя);
	
	Если ОбновлятьИнтерфейс Тогда
		ОбновитьИнтерфейс = Истина;
		ПодключитьОбработчикОжидания("ОбновитьИнтерфейсПрограммы", 2, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИнтерфейсПрограммы()
	
	ОбновитьИнтерфейс = Ложь;
	ОбщегоНазначенияКлиент.ОбновитьИнтерфейсПрограммы();
	
КонецПроцедуры

#КонецОбласти

#Область ВызовСервера

&НаСервере
Функция ПриИзмененииРеквизитаСервер(ИмяЭлемента)
	
	РеквизитПутьКДанным = Элементы[ИмяЭлемента].ПутьКДанным;
	
	ИмяРеквизита = СохранитьЗначениеРеквизита(РеквизитПутьКДанным,  Новый Структура);
	
	ОбновитьЗначениеРеквизитов(РеквизитПутьКДанным);
	
	ОбновитьПовторноИспользуемыеЗначения();
	
	Возврат ИмяРеквизита;
	
КонецФункции

#КонецОбласти

#Область Сервер

&НаСервере
Функция СохранитьЗначениеРеквизита(РеквизитПутьКДанным, Результат)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если РеквизитПутьКДанным = "" Тогда
		Возврат "";
	КонецЕсли;
	
	// Определение имени константы.
	КонстантаИмя = "";
	Если НРег(Лев(РеквизитПутьКДанным, 10)) = НРег("Константа_") Тогда
		КонстантаИмя = Сред(РеквизитПутьКДанным, 11);
	КонецЕсли;
	
	// Сохранения значения константы.
	Если КонстантаИмя <> "" Тогда
		КонстантаМенеджер = Константы[КонстантаИмя];
		
		Если НРег(Лев(РеквизитПутьКДанным, 10)) = НРег("Константа_") Тогда
			КонстантаЗначение = ЭтотОбъект[РеквизитПутьКДанным];  
		КонецЕсли;
		
		Если КонстантаМенеджер.Получить() <> КонстантаЗначение Тогда
			КонстантаМенеджер.Установить(КонстантаЗначение);
		КонецЕсли;
		
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат КонстантаИмя;
	
КонецФункции

&НаСервере
Процедура ОбновитьЗначениеРеквизитов(РеквизитПутьКДанным = "")
	
	УстановитьПривилегированныйРежим(Истина);
	
	КонстантаИмя = "";
	Если НРег(Лев(РеквизитПутьКДанным, 10)) = НРег("Константа_") Тогда
		КонстантаИмя = Сред(РеквизитПутьКДанным, 11);
	КонецЕсли;
	
	Если КонстантаИмя <> "" Тогда
		ЭтотОбъект[РеквизитПутьКДанным] = Константы[КонстантаИмя].Получить();
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

#КонецОбласти

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеВидимостьюДоступностью(Форма)
	
	Форма.Элементы.НастройкиПодключенийБидзаар.Доступность = Форма.Константа_ИспользоватьИнтеграциюСЭТПБидзаар;
	Форма.Элементы.НастройкаВыгрузки.Доступность = Форма.Константа_ИспользоватьИнтеграциюСЭТПБидзаар;
	
КонецПроцедуры

#КонецОбласти
