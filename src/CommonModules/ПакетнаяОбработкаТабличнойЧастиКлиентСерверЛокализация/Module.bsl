#Область ПрограммныйИнтерфейс

// Дополняе структуру действий над строкой табличной части при изменении элемента формы.
// 
// Параметры:
//  Форма - Форма - Форма, в которой происходит обработка табличной части.
//  Элемент - ПолеФормы - Измененный элемент формы.
//  СтруктураДействий - см. ПакетнаяОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧВЦикле.Действия.
//
Процедура ДополнитьСтруктуруДействийПриИзмененииЭлемента(Форма, Элемент, СтруктураДействий) Экспорт
	
	//++ Локализация
	Если Форма.ИмяФормы = "Документ.ОтчетОРозничныхПродажах.Форма.ФормаДокумента" Тогда
		СтруктураДействий.Вставить("ЗаполнитьПризнакПодакцизныйТовар", Новый Структура("Номенклатура", "ПодакцизныйТовар"));
	КонецЕсли;
	
	Если Не ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "ПараметрыИнтеграцииГосИС") Тогда
		Возврат;
	КонецЕсли;
	
	Если Форма.ИмяФормы = "Документ.ЧекККМ.Форма.ФормаДокументаРМК"
		Или Форма.ИмяФормы = "Документ.ЧекККМВозврат.Форма.ФормаДокументаРМК" Тогда
		
		Если Элемент = "Номенклатура" Тогда
			
			Если Форма.ПараметрыИнтеграцииГосИС.Получить("ЕГАИС")<>Неопределено
				Или Форма.ПараметрыИнтеграцииГосИС.Получить("ИСМП")<>Неопределено Тогда
				СтруктураДействий.Вставить("ЗаполнитьПризнакМаркируемаяПродукция", Новый Структура("Номенклатура", "МаркируемаяПродукция"));
				СтруктураДействий.Вставить("ЗаполнитьВидПродукцииИС", Новый Структура("Номенклатура", "ВидПродукцииИС"));
				СтруктураДействий.Вставить("ПроверитьСериюРассчитатьСтатус",
					Новый Структура("Склад, ПараметрыУказанияСерий", Форма.Объект.Склад, Форма.ПараметрыУказанияСерий));
			КонецЕсли;
			
			Если Форма.ПараметрыИнтеграцииГосИС.Получить("ЕГАИС")<>Неопределено Тогда
				СтруктураДействий.Вставить("ЗаполнитьНоменклатуруЕГАИС", ПараметрыЗаполненияНоменклатурыЕГАИСДляЧека(Форма));
			КонецЕсли;
			
		ИначеЕсли Элемент = "НоменклатураПризнаки" Тогда
			
			Если Форма.ПараметрыИнтеграцииГосИС.Получить("ЕГАИС")<>Неопределено Тогда
				СтруктураДействий.Вставить("ЗаполнитьПризнакМаркируемаяПродукция", Новый Структура("Номенклатура", "МаркируемаяПродукция"));
				СтруктураДействий.Вставить("ЗаполнитьВидПродукцииИС", Новый Структура("Номенклатура", "ВидПродукцииИС"));
			КонецЕсли;
			Если Форма.ПараметрыИнтеграцииГосИС.Получить("ИСМП")<>Неопределено Тогда
				СтруктураДействий.Вставить("ЗаполнитьПризнакМаркируемаяПродукция", Новый Структура("Номенклатура", "МаркируемаяПродукция"));
				СтруктураДействий.Вставить("ЗаполнитьВидПродукцииИС", Новый Структура("Номенклатура", "ВидПродукцииИС"));
			КонецЕсли;
			
		ИначеЕсли Элемент = "Характеристика"
			Или Элемент = "Серия" Тогда
			
			Если Форма.ПараметрыИнтеграцииГосИС.Получить("ЕГАИС")<>Неопределено Тогда
				СтруктураДействий.Вставить("ЗаполнитьНоменклатуруЕГАИС", ПараметрыЗаполненияНоменклатурыЕГАИСДляЧека(Форма));
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли Форма.ИмяФормы = "Документ.ВозвратТоваровПоставщику.Форма.ФормаДокумента"
		Или Форма.ИмяФормы = "Документ.КорректировкаРеализации.Форма.ФормаДокумента"
		Или Форма.ИмяФормы = "Документ.РеализацияТоваровУслуг.Форма.ФормаДокумента" 
		Или Форма.ИмяФормы = "Документ.ОтборРазмещениеТоваров.Форма.ФормаДокумента" 
		Или Форма.ИмяФормы = "Документ.РасходныйОрдерНаТовары.Форма.ФормаДокумента" Тогда
		
		Если Форма.ПараметрыИнтеграцииГосИС.Получить("ИСМП")<>Неопределено Тогда
			СтруктураДействий.Вставить("ЗаполнитьВидПродукцииИС", Новый Структура("Номенклатура", "ВидПродукцииИС"));
			СтруктураДействий.Вставить("ЗаполнитьПризнакМаркируемаяПродукция", Новый Структура("Номенклатура", "МаркируемаяПродукция"));
			СтруктураДействий.Вставить("СнятьПризнакМаркируемаяПродукцияАлкоголь", Новый Структура);
			СтруктураДействий.Вставить("ЗаполнитьПризнакАвтоматическийОСУИС", Новый Структура);
		КонецЕсли;
		
	ИначеЕсли (Форма.ИмяФормы = "Документ.ВозвратТоваровОтПокупателя.Форма.ФормаДокумента"
		Или Форма.ИмяФормы = "Документ.ПриобретениеТоваровУслуг.Форма.ФормаДокумента") Тогда
		
		Если Форма.ПараметрыИнтеграцииГосИС.Получить("ИСМП")<>Неопределено 
			И Форма.ПараметрыИнтеграцииГосИС.Получить("ИСМП").ВидыПродукции.Количество() > 0 
			И Форма.ПараметрыИнтеграцииГосИС.Получить(
				Форма.ПараметрыИнтеграцииГосИС.Получить("ИСМП").ВидыПродукции[0]).ИспользоватьКолонкуСтатусаПроверкиПодбора Тогда
			СтруктураДействий.Вставить("ЗаполнитьВидПродукцииИС", Новый Структура("Номенклатура", "ВидПродукцииИС"));
			СтруктураДействий.Вставить("ЗаполнитьПризнакМаркируемаяПродукция", Новый Структура("Номенклатура", "МаркируемаяПродукция"));
			СтруктураДействий.Вставить("СнятьПризнакМаркируемаяПродукцияАлкоголь", Новый Структура);
		КонецЕсли;
			
	КонецЕсли;
	//-- Локализация
	Возврат;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область Локализация

//++ Локализация

// Пересчитывает количество товара ВЕТИС в текущей строке табличной части документа.
//
// Параметры:
//	ТекущаяСтрока - см. ПакетнаяОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧВЦикле.ТекущаяСтрока
//	СтруктураДействий - см. ПакетнаяОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧВЦикле.Действия
//	КэшированныеЗначения - см. ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения
//	ТекстОшибки - Строка - Текст ошибок, при их наличии.
//
Процедура ПересчитатьКоличествоЕдиницВЕТИСВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения, ТекстОшибки) Экспорт
	
	Перем ПараметрыПересчетаКоличестваВЕТИС;
	
	Если СтруктураДействий.Свойство("ПересчитатьКоличествоЕдиницВЕТИС", ПараметрыПересчетаКоличестваВЕТИС) Тогда
		
		ПараметрыПересчета = ПакетнаяОбработкаТабличнойЧастиКлиентСервер.НормализоватьПараметрыПересчетаЕдиниц(ТекущаяСтрока, ПараметрыПересчетаКоличестваВЕТИС);
		
		КоличествоВЕТИС = ИнтеграцияВЕТИСУТКлиентСервер.ПересчитатьКоличествоЕдиницВЕТИС(
											ТекущаяСтрока["Количество"+ПараметрыПересчетаКоличестваВЕТИС.Суффикс],
											ПараметрыПересчета.Номенклатура,
											ПараметрыПересчета.Упаковка,
											ПараметрыПересчета.НужноОкруглять,
											КэшированныеЗначения,
											ТекстОшибки);
		
		Если КоличествоВЕТИС <> Неопределено Тогда
			ИмяКоличестваВЕТИС = "Количество" + ПараметрыПересчетаКоличестваВЕТИС.Суффикс + "ВЕТИС";
			
			ТекущаяСтрока[ИмяКоличестваВЕТИС] = КоличествоВЕТИС;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Пересчитывает количество товара (в единицах хранения) в текущей строке табличной части документа.
//
// Параметры:
//	ТекущаяСтрока - см. ПакетнаяОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧВЦикле.ТекущаяСтрока
//	СтруктураДействий - см. ПакетнаяОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧВЦикле.Действия
//	КэшированныеЗначения - см. ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения
//	ТекстОшибки - Строка - Текст ошибок, при их наличии.
//
Процедура ПересчитатьКоличествоЕдиницПоВЕТИСВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения, ТекстОшибки) Экспорт
	
	Перем ПараметрыПересчетаКоличества;
	
	Если СтруктураДействий.Свойство("ПересчитатьКоличествоЕдиницПоВЕТИС", ПараметрыПересчетаКоличества) Тогда
		
		ПараметрыПересчета = ПакетнаяОбработкаТабличнойЧастиКлиентСервер.НормализоватьПараметрыПересчетаЕдиниц(ТекущаяСтрока, ПараметрыПересчетаКоличества);
		ИмяКоличестваВЕТИС = "Количество" + ПараметрыПересчетаКоличества.Суффикс + "ВЕТИС";
		
		Количество = ИнтеграцияВЕТИСУТКлиентСервер.ПересчитатьКоличествоЕдиниц(
											ТекущаяСтрока[ИмяКоличестваВЕТИС],
											ПараметрыПересчета.Номенклатура,
											ПараметрыПересчета.Упаковка,
											ПараметрыПересчета.НужноОкруглять,
											КэшированныеЗначения,
											ТекстОшибки);
											
		Если Количество <> Неопределено Тогда
			ТекущаяСтрока["Количество" + ПараметрыПересчетаКоличества.Суффикс] = Количество;
		КонецЕсли; 
		
	КонецЕсли;
	
КонецПроцедуры

// Пересчитывает количество товара (в единицах хранения ФГИС Зерно) в текущей строке табличной части документа.
//
// Параметры:
//	ТекущаяСтрока			- Структура - Структура со свойствами строки документа.
//	СтруктураДействий		- Структура - Структура с действиями, которые нужно произвести.
//	КэшированныеЗначения	- Структура - Сохраненные значения параметров, используемых при обработке строки таблицы.
//
Процедура ПересчитатьКоличествоЕдиницПоЗЕРНОВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения) Экспорт
	
	Перем ПараметрыПересчетаКоличества, ТекстОшибки;
	
	Если СтруктураДействий.Свойство("ПересчитатьКоличествоЕдиницПоЗЕРНО", ПараметрыПересчетаКоличества) Тогда
		ПараметрыПересчета = ПакетнаяОбработкаТабличнойЧастиКлиентСервер.НормализоватьПараметрыПересчетаЕдиниц(ТекущаяСтрока, ПараметрыПересчетаКоличества);
		Если ТекущаяСтрока.Количество > 0 Тогда
			Если ЗначениеЗаполнено(ПараметрыПересчета.Номенклатура) Тогда
				Коэффициент = КоэффициентУпаковкиЗерно(ПараметрыПересчета, КэшированныеЗначения);
				Если Не ЗначениеЗаполнено(Коэффициент) Тогда
					Коэффициент = 1;
				КонецЕсли;
				ТекущаяСтрока.КоличествоЗЕРНО = ТекущаяСтрока.Количество / Коэффициент;
			Иначе
				ТекущаяСтрока.Количество = 0;
			КонецЕсли;
		ИначеЕсли ЗначениеЗаполнено(ПараметрыПересчета.Номенклатура)
			И ТекущаяСтрока.КоличествоЗЕРНО > 0 Тогда
			Коэффициент = КоэффициентУпаковкиЗерно(ПараметрыПересчета, КэшированныеЗначения);
			ТекущаяСтрока.Количество = ТекущаяСтрока.КоличествоЗЕРНО * Коэффициент;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

//-- Локализация

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//++ Локализация

Функция ПараметрыЗаполненияНоменклатурыЕГАИСДляЧека(Форма) Экспорт
	
	ПараметрыЗаполнения = Новый Структура;
	ПараметрыЗаполнения.Вставить("ИмяКолонки", "НоменклатураЕГАИС");
	ПараметрыЗаполнения.Вставить("Серии", Форма.Объект.Серии);
	Возврат ПараметрыЗаполнения;
	
КонецФункции

Функция КоэффициентУпаковкиЗерно(ПараметрыПересчета, КэшированныеЗначения)
	
	Коэффициент = КэшированныеЗначения.КоэффициентыУпаковок[ПараметрыПересчета.Номенклатура];
	Если Коэффициент = Неопределено Тогда
		Коэффициент = ИнтеграцияИСВызовСервераУТ.КоэффициентУпаковки(ПараметрыПересчета.Упаковка, ПараметрыПересчета.Номенклатура);
		КэшированныеЗначения.КоэффициентыУпаковок.Вставить(ПараметрыПересчета.Номенклатура, Коэффициент);
	КонецЕсли;
	
	Возврат Коэффициент;
	
КонецФункции

//-- Локализация
#КонецОбласти	